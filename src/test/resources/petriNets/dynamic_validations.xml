<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:noNamespaceSchemaLocation="https://petriflow.com/petriflow.schema.xsd">
    <id>dynamic_validations</id>
    <title>dynamic_validations</title>
    <defaultRole>true</defaultRole>
    <initials>DVT</initials>
    <!-- ROLES -->
    <data type="number">
        <id>min</id>
        <title>Min</title>
    </data>
    <data type="number">
        <id>max</id>
        <title>Max</title>
        <init>5</init>
    </data>
    <data type="number">
        <id>number</id>
        <title>Number</title>
        <validations>
            <validation>
                <expression dynamic="true">inrange ${min.value as Integer},${max.value as Integer}</expression>
                <message>Number field validation message</message>
            </validation>
        </validations>
    </data>
    <data type="text">
        <id>text</id>
        <title>Text</title>
        <validations>
            <validation>
                <expression dynamic="true">maxLength ${max.value as Integer}</expression>
                <message>Text field validation message</message>
            </validation>
        </validations>
    </data>
    <data type="date">
        <id>date</id>
        <title>Date</title>
        <validations>
            <validation>
                <expression dynamic="true">between past,today-P${max.value as Integer}D</expression>
                <message>Date field validation message</message>
            </validation>
        </validations>
    </data>

    <data type="boolean">
        <id>number_valid_switch</id>
        <title>Switch</title>

        <action trigger="set">
            number_valid_switch: f.number_valid_switch,
            number: f.number;

            if (number_valid_switch.value) {
            change number validations { "odd" }
            } else {
            change number validations { dynamicValidation('''inrange ${min.value as Integer},${max.value as Integer}''',
            null) }
            }
        </action>
    </data>

    <data type="boolean">
        <id>text_valid_switch</id>
        <title>Switch</title>

        <action trigger="set">
            text_valid_switch: f.text_valid_switch,
            text: f.text;

            if (text_valid_switch.value) {
            change text validations { "email" }
            } else {
            change text validations { dynamicValidation('''maxLength ${max.value as Integer}''', null) }
            }
        </action>
    </data>

    <transition>
        <id>transition</id>
        <x>200</x>
        <y>200</y>
        <label>Transition</label>
        <assignPolicy>auto</assignPolicy>

        <dataRef>
            <id>min</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
        <dataRef>
            <id>max</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
        <dataRef>
            <id>number</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
        <dataRef>
            <id>text</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
        <dataRef>
            <id>date</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
        <dataRef>
            <id>number_valid_switch</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
        <dataRef>
            <id>text_valid_switch</id>
            <logic>
                <behavior>editable</behavior>
            </logic>
        </dataRef>
    </transition>

</document>